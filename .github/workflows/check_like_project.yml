name: Django CI

on:
  push:

jobs:
  ci:
    runs-on: ubuntu-20.04
    env:
      working-directory: Django/like_exam
      # DB_HOST: 127.0.0.1
      # DB_PORT: 3306
      # DB_USER: root
      # DB_PASSWORD: 1234
      # DB_DATABASE: oz_django
    steps:
      - name: Check out the codes
        uses: actions/checkout@v2
        
#  name: Install and configure Poetry
#       uses: snok/install-poetry@v1

# 캐싱을 활용해서 poetry 설치 속도를 개선

# - name: Load cached Poetry installation
#         id: cached-poetry
#         uses: actions/cache@v3
#         with:
#           path: ~/.local  # the path depends on the OS
#           key: poetry-0  # increment to reset cache
#       - name: Install Poetry
#         if: steps.cached-poetry.outputs.cache-hit != 'true'
#         uses: snok/install-poetry@v1

      - name: Install Poetry
        run: pipx install poetry

      - id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: "poetry"

      # - name: Set timezone to KST
      #   run: |
      #     sudo rm /etc/localtime
      #     sudo ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

      # # Start Mysql
      # # https://ovirium.com/blog/how-to-make-mysql-work-in-your-github-actions/
      # - name: Start Mysql
      #   run: |
      #     sudo systemctl start mysql
      #     mysql -e "use mysql; FLUSH PRIVILEGES; ALTER USER '${{ env.DB_USER }}'@'localhost' IDENTIFIED BY '${{ env.DB_PASSWORD }}';" -uroot -proot
      #     mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      # - name: Install Poetry
      #   run: |
      #     curl -sSL curl -sSL https://install.python-poetry.org | python3 -
      #     echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install
        working-directory: ${{ env.working-directory }}

      - name: Run black
        run: |
          poetry run black . --check
        working-directory: ${{ env.working-directory }}

      - name: Run isort
        run: |
          poetry run isort . --check --diff
        working-directory: ${{ env.working-directory }}

      - name: Run Mypy
        run: |
          poetry run mypy .
        working-directory: ${{ env.working-directory }}

    #   - name: Test python project
    #     run: |
    #       poetry run python manage.py test
    #     working-directory: ${{ env.working-directory }}